// <copyright file="CustomerTest.Constructor01.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace ObjectLibrary
{
    public partial class CustomerTest
    {
[TestMethod]
[PexGeneratedBy(typeof(CustomerTest))]
public void Constructor351()
{
    Customer customer;
    customer = this.Constructor();
    Assert.IsNotNull((object)customer);
    Assert.AreEqual<string>("", customer.CustID);
    Assert.AreEqual<string>("", customer.CustNum);
    Assert.AreEqual<string>("", customer.Name);
    Assert.AreEqual<string>("", customer.PhoneNumber);
    Assert.AreEqual<string>("", customer.FaxNumber);
    Assert.AreEqual<string>("", customer.DiscountPercent);
    Assert.AreEqual<string>("", customer.Email);
    Assert.AreEqual<string>("", customer.ContactName);
    Assert.IsNotNull(customer.Address);
    Assert.AreEqual<string>("", customer.Address.Address1);
    Assert.AreEqual<string>("", customer.Address.Address2);
    Assert.AreEqual<string>("", customer.Address.Address3);
    Assert.AreEqual<string>("", customer.Address.City);
    Assert.AreEqual<string>("", customer.Address.State);
    Assert.AreEqual<string>("", customer.Address.Zip);
    Assert.AreEqual<string>("", customer.Address.Country);
    Assert.IsNotNull(customer.ShipToAddress);
    Assert.AreEqual<string>("", customer.ShipToAddress.Address1);
    Assert.AreEqual<string>("", customer.ShipToAddress.Address2);
    Assert.AreEqual<string>("", customer.ShipToAddress.Address3);
    Assert.AreEqual<string>("", customer.ShipToAddress.City);
    Assert.AreEqual<string>("", customer.ShipToAddress.State);
    Assert.AreEqual<string>("", customer.ShipToAddress.Zip);
    Assert.AreEqual<string>("", customer.ShipToAddress.Country);
    Assert.AreEqual<string>("", customer.SpecialInstructions);
}
[TestMethod]
[PexGeneratedBy(typeof(CustomerTest))]
public void Constructor0182()
{
    Customer customer;
    customer = this.Constructor01
                   ((string)null, (string)null, (string)null, (string)null, (string)null, 
                    (string)null, (string)null, (string)null, 
                    (string)null, (string)null, (string)null, 
                    (string)null, (string)null, (string)null, 
                    (string)null, (string)null, (string)null, 
                    (string)null, (string)null, (string)null, 
                    (string)null, (string)null, (string)null);
    Assert.IsNotNull((object)customer);
    Assert.AreEqual<string>((string)null, customer.CustID);
    Assert.AreEqual<string>((string)null, customer.CustNum);
    Assert.AreEqual<string>((string)null, customer.Name);
    Assert.AreEqual<string>((string)null, customer.PhoneNumber);
    Assert.AreEqual<string>((string)null, customer.FaxNumber);
    Assert.AreEqual<string>((string)null, customer.DiscountPercent);
    Assert.AreEqual<string>((string)null, customer.Email);
    Assert.AreEqual<string>((string)null, customer.ContactName);
    Assert.IsNotNull(customer.Address);
    Assert.AreEqual<string>((string)null, customer.Address.Address1);
    Assert.AreEqual<string>((string)null, customer.Address.Address2);
    Assert.AreEqual<string>((string)null, customer.Address.Address3);
    Assert.AreEqual<string>((string)null, customer.Address.City);
    Assert.AreEqual<string>((string)null, customer.Address.State);
    Assert.AreEqual<string>((string)null, customer.Address.Zip);
    Assert.AreEqual<string>((string)null, customer.Address.Country);
    Assert.IsNotNull(customer.ShipToAddress);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.Address1);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.Address2);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.Address3);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.City);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.State);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.Zip);
    Assert.AreEqual<string>((string)null, customer.ShipToAddress.Country);
    Assert.AreEqual<string>((string)null, customer.SpecialInstructions);
}
    }
}
